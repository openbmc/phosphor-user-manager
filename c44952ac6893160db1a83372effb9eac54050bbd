{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "738f9327_837d7b70",
        "filename": "test/user_mgr_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 260,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-11-01T13:07:51Z",
      "side": 1,
      "message": "Instead of hardcoding the file name, Can we use the mktemp?",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 260,
        "endChar": 43
      },
      "revId": "c44952ac6893160db1a83372effb9eac54050bbd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e96d5f9_e3090551",
        "filename": "test/user_mgr_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 260,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-01T18:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "738f9327_837d7b70",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 260,
        "endChar": 43
      },
      "revId": "c44952ac6893160db1a83372effb9eac54050bbd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8712ecb_ae8200d8",
        "filename": "user_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1356,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-11-01T13:07:51Z",
      "side": 1,
      "message": "Make the property public , if they are not doing any abstraction. \nSetter functions are not needed here",
      "range": {
        "startLine": 1347,
        "startChar": 0,
        "endLine": 1356,
        "endChar": 0
      },
      "revId": "c44952ac6893160db1a83372effb9eac54050bbd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45b3e67d_68a1b5d1",
        "filename": "user_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1356,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-01T18:45:49Z",
      "side": 1,
      "message": "The advantages of using interfaces is that even if we change the type of |pamAuthConfigFile|, for example, from a string to a struct, we don\u0027t need to change all the places where a member variable is referenced.\n\nPlease take a look at https://stackoverflow.com/questions/11071407/advantage-of-set-and-get-methods-vs-public-variable. I still prefer setter.",
      "parentUuid": "a8712ecb_ae8200d8",
      "range": {
        "startLine": 1347,
        "startChar": 0,
        "endLine": 1356,
        "endChar": 0
      },
      "revId": "c44952ac6893160db1a83372effb9eac54050bbd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "933bcc4c_ef765a65",
        "filename": "user_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1356,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-11-03T07:19:17Z",
      "side": 1,
      "message": "I didn\u0027t get it, in any case you need to make the change.\nas the function prototype will be changed, hence all the function call needs to be changed.",
      "parentUuid": "45b3e67d_68a1b5d1",
      "range": {
        "startLine": 1347,
        "startChar": 0,
        "endLine": 1356,
        "endChar": 0
      },
      "revId": "c44952ac6893160db1a83372effb9eac54050bbd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a7038e9_eb54efec",
        "filename": "user_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1356,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-03T21:32:55Z",
      "side": 1,
      "message": "Yeah, for example, one day we decided to refactor the two password config file strings so it becomes a single struct, \n\n```\nstruct PamConfigPaths {\n  std::string pamPasswdConfigFile;\n  std::string pamAuthConfigFile;\n}\n\n\n// Inside your class\nprivate:\n   PamConfigPaths paths;\n```\n\nIf all you have 100 lines of codes which have direct access to the previous paths, you have to change all these 100 lines.\n\nWith setPamAuthConfigFile(), you just need a single line of change,\n\n```\nvoid UserMgr::setPamAuthConfigFile(std::string_view val)\n{\n    paths.pamAuthConfigFile \u003d val;\n}\n```\n\nDoes that make more sense now?",
      "parentUuid": "933bcc4c_ef765a65",
      "range": {
        "startLine": 1347,
        "startChar": 0,
        "endLine": 1356,
        "endChar": 0
      },
      "revId": "c44952ac6893160db1a83372effb9eac54050bbd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18d80199_e7dc2793",
        "filename": "user_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1356,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-11-08T06:56:37Z",
      "side": 1,
      "message": "1) We don\u0027t have 100 places where there is a direct access.\n2) We are changing this as we want to make the code unit testable.\n3) I could have asked you instead of creating the setter/getter, we can achieve this with the use of friend (i.e make the test class friend of user_mgr).\n4) I would prefer either make it public or achive this through friend class.",
      "parentUuid": "2a7038e9_eb54efec",
      "range": {
        "startLine": 1347,
        "startChar": 0,
        "endLine": 1356,
        "endChar": 0
      },
      "revId": "c44952ac6893160db1a83372effb9eac54050bbd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77e15a38_73144b78",
        "filename": "user_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1356,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-08T17:49:43Z",
      "side": 1,
      "message": "I asked in Discord. The feedback I got is https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rh-get.\n\nSo I made the two variables protected members.\n\nDone.",
      "parentUuid": "18d80199_e7dc2793",
      "range": {
        "startLine": 1347,
        "startChar": 0,
        "endLine": 1356,
        "endChar": 0
      },
      "revId": "c44952ac6893160db1a83372effb9eac54050bbd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "463cd82b_c0e37f34",
        "filename": "user_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1356,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-11-09T11:40:02Z",
      "side": 1,
      "message": "@patrick What is your view here?",
      "parentUuid": "77e15a38_73144b78",
      "range": {
        "startLine": 1347,
        "startChar": 0,
        "endLine": 1356,
        "endChar": 0
      },
      "revId": "c44952ac6893160db1a83372effb9eac54050bbd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}