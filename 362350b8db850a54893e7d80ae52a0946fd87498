{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5181426b_00edf071",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-29T21:43:19Z",
      "side": 1,
      "message": "This isn\u0027t really true and seems a like a whole lot of work to avoid a \u0027while(true)\u0027, isn\u0027t it?",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 10,
        "endChar": 21
      },
      "revId": "362350b8db850a54893e7d80ae52a0946fd87498",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dedff68e_2f0262b1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-29T23:04:14Z",
      "side": 1,
      "message": "I thought event loop is cleaner. WDYT?\n\n\"a whole lot of work\" has been done by me. What\u0027s the downside of accepting this?\n\nIf this wording is not proper, I can change it.",
      "parentUuid": "5181426b_00edf071",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 10,
        "endChar": 21
      },
      "revId": "362350b8db850a54893e7d80ae52a0946fd87498",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9248bdd8_1cb1ed76",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-29T23:25:00Z",
      "side": 1,
      "message": "It adds a dependency on a new repo for no good purpose. Linking with a new library just to replace 2 lines of a while loop is slower, bigger, and worse for development.",
      "parentUuid": "dedff68e_2f0262b1",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 10,
        "endChar": 21
      },
      "revId": "362350b8db850a54893e7d80ae52a0946fd87498",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5465269_91b2d731",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-29T23:28:33Z",
      "side": 1,
      "message": "If it is really interesting to remove the whole loop, why not add a function in sdbusplus which is the whole loop?",
      "parentUuid": "9248bdd8_1cb1ed76",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 10,
        "endChar": 21
      },
      "revId": "362350b8db850a54893e7d80ae52a0946fd87498",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ec85916_2dcd28fc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-29T23:34:34Z",
      "side": 1,
      "message": "\u003e for no good purpose\n\nWait, the good purpose is that I hope this eliminates manually calling |process_discard| and |wait|.\n\n\u003e Linking with a new library just to replace 2 lines of a while loop is slower, bigger, and worse for development.\nDoes most system have steventplus already? phosphor-user-manager relies on certificate-manager, which relies on steventplus already.\n\nSo the best practise is to use while loop?",
      "parentUuid": "9248bdd8_1cb1ed76",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 10,
        "endChar": 21
      },
      "revId": "362350b8db850a54893e7d80ae52a0946fd87498",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51a4ae1c_1b06de6c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-29T23:39:41Z",
      "side": 1,
      "message": "\u003e If it is really interesting to remove the whole loop, why not add a function in sdbusplus which is the whole loop?\n\nSure, if that is cleaner, I can do that. I just came across this while loop, compared it with what I saw in https://github.com/search?p\u003d5\u0026q\u003dorg%3Aopenbmc+attach_event\u0026type\u003dCode\n\nIt\u0027s not a big deal for me to abandon these two patches.",
      "parentUuid": "0ec85916_2dcd28fc",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 10,
        "endChar": 21
      },
      "revId": "362350b8db850a54893e7d80ae52a0946fd87498",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "432e8be6_5a949972",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-29T23:58:12Z",
      "side": 1,
      "message": "\u003e Wait, the good purpose is that I hope this eliminates manually calling |process_discard| and |wait|.\n\nI\u0027m completely flabbergasted that you think that two lines of a while loop is _worse_ than that boilerplate of getting the sd_event and the priority parameters.  I don\u0027t even know what to say.\n\nThe process_discard loop is also used all over the codebase and it is documented in the examples in sdbusplus.\n\nhttps://github.com/search?q\u003dorg%3Aopenbmc+process_discard\u0026type\u003dcode\n\nYou should really only be using sdevent if you have extra needs that only sdevent can satisfy (such as wanting to poll a network socket at the same time).\n\n\u003e Does most system have sdeventplus already? phosphor-user-manager relies on certificate-manager, which relies on sdeventplus already.\n\nI think you are confusing library dependencies and dbus dependencies.  Certainly the sdeventplus library is loaded on the _system_, such as the example you point to.  It is not loaded into any phosphor-user-manager _processes_ because it doesn\u0027t link against the library directly.  When P-U-M makes calls across dbus to services that happen to be using sdeventplus, this has no impact on the performance of P-U-M itself.\n\n\u003e Sure, if that is cleaner, I can do that.\n\nThat is up to you.  I don\u0027t really find the boilerplate of the while loop all that offensive.  If you do, go ahead and simplify it.  Switching it to sdeventplus is _not_ a simplification (and is quite the opposite to my eyes).",
      "parentUuid": "51a4ae1c_1b06de6c",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 10,
        "endChar": 21
      },
      "revId": "362350b8db850a54893e7d80ae52a0946fd87498",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddfe8c7d_66c1d7b4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-30T01:42:56Z",
      "side": 1,
      "message": "\u003e I\u0027m completely flabbergasted that you think that two lines of a while loop is _worse_ than that boilerplate of getting the sd_event and the priority parameters.  I don\u0027t even know what to say. \n\nYou are the expert of sdbusplus while I am only a user of that library. And it shows in https://github.com/search?p\u003d5\u0026q\u003dorg%3Aopenbmc+attach_event\u0026type\u003dCode\n that many other users misunderstood this library as well.\n\n\u003e I don\u0027t even know what to say.\n\nThis sounds a little offensive to me.. üòê I am just trying to help clean this PUM repo. So that my future codes can get through easier.\n\n\u003e You should really only be using sdevent if you have extra needs that only sdevent can satisfy (such as wanting to poll a network socket at the same time).\n\nThis what I need to learn from this code review.",
      "parentUuid": "432e8be6_5a949972",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 10,
        "endChar": 21
      },
      "revId": "362350b8db850a54893e7d80ae52a0946fd87498",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be590cef_41a169b9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-30T01:49:42Z",
      "side": 1,
      "message": "The other part of your comment makes sense to me and thanks for the information.",
      "parentUuid": "ddfe8c7d_66c1d7b4",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 10,
        "endChar": 21
      },
      "revId": "362350b8db850a54893e7d80ae52a0946fd87498",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}